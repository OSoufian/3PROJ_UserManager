// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/:name": {
            "get": {
                "description": "get any permissions every where",
                "tags": [
                    "Perms"
                ],
                "summary": "get permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Permissions"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/channels/:channId": {
            "get": {
                "description": "get channel by id",
                "tags": [
                    "Channels"
                ],
                "summary": "get channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Channels"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "description": "get channel by id",
                "tags": [
                    "Channels"
                ],
                "summary": "get channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Channels"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "description": "get channel by id",
                "tags": [
                    "Channels"
                ],
                "summary": "get channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Channels"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "description": "get channel by id",
                "tags": [
                    "Channels"
                ],
                "summary": "get channel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Channels"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/login/end/:username": {
            "post": {
                "description": "end the webauthn login and update the user to session and database",
                "tags": [
                    "Logins"
                ],
                "summary": "end Login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "JWTtoken"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/login/password/:username": {
            "post": {
                "description": "set a password login for users",
                "tags": [
                    "Logins"
                ],
                "summary": "password Login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "JWTtoken"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/login/start/:username": {
            "post": {
                "description": "begin the webauthn login and update the user credential to session and database",
                "tags": [
                    "Logins"
                ],
                "summary": "begin Login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Options"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/perms": {
            "get": {
                "description": "get any permissions every where",
                "tags": [
                    "Perms"
                ],
                "summary": "get permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Permissions"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/register/end/:username": {
            "post": {
                "description": "end the webauthn registration and update the user to session and database",
                "tags": [
                    "Registrations"
                ],
                "summary": "end Registration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "JWTtoken"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/register/password/:username": {
            "post": {
                "description": "set a password registration for users",
                "tags": [
                    "Registrations"
                ],
                "summary": "password Registration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "JWTtoken"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/register/start/:username": {
            "post": {
                "description": "begin the webauthn registration and save the user to session and database",
                "tags": [
                    "Registrations"
                ],
                "summary": "begin Registration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Options"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/roles/": {
            "get": {
                "description": "Get all roles from a channel Id",
                "tags": [
                    "Roles"
                ],
                "summary": "get Roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Role"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "description": "create a role for a specify channel",
                "tags": [
                    "Roles"
                ],
                "summary": "Create a role",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Role"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "description": "delete a role",
                "tags": [
                    "Roles"
                ],
                "summary": "delete a role",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Role"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "description": "edit a role",
                "tags": [
                    "Roles"
                ],
                "summary": "patch a role",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Role"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/roles/:roleId": {
            "get": {
                "description": "Get a specific role by an Id",
                "tags": [
                    "Roles"
                ],
                "summary": "get Role",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Role"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "description": "add or remove a bulk of user roles",
                "tags": [
                    "Roles"
                ],
                "summary": "add or remove user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Role"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "get all information about me",
                "tags": [
                    "Users"
                ],
                "summary": "Get about me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "UserModel"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "description": "delete user account",
                "tags": [
                    "Users"
                ],
                "summary": "delete account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "nil"
                        }
                    }
                }
            },
            "patch": {
                "description": "edit user information",
                "tags": [
                    "Users"
                ],
                "summary": "edit user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "nil"
                        }
                    }
                }
            }
        },
        "/user/cred": {
            "delete": {
                "description": "delete webauthn credential",
                "tags": [
                    "Users"
                ],
                "summary": "delete credential",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "nil"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Just Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "nil"
                        }
                    }
                }
            }
        },
        "/user/role/:roleId": {
            "post": {
                "description": "add or remove roles to user",
                "tags": [
                    "Users"
                ],
                "summary": "roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "nil"
                        }
                    }
                }
            }
        },
        "/user/subscribe/:channId": {
            "post": {
                "description": "Subscribe to a channel",
                "tags": [
                    "Users"
                ],
                "summary": "Subscribe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserModel"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "nil"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Channel": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "owerId": {
                    "type": "integer"
                },
                "owner": {
                    "$ref": "#/definitions/domain.UserModel"
                },
                "socialLink": {
                    "type": "string"
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.UserModel"
                    }
                }
            }
        },
        "domain.Role": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/domain.Channel"
                },
                "channId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                },
                "user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.UserModel"
                    }
                }
            }
        },
        "domain.UserModel": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/webauthn.Credential"
                    }
                },
                "disable": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "incredentials": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Role"
                    }
                },
                "subscribtion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Channel"
                    }
                },
                "username": {
                    "type": "string"
                },
                "valideAccount": {
                    "type": "boolean"
                }
            }
        },
        "webauthn.Authenticator": {
            "type": "object",
            "properties": {
                "aaguid": {
                    "description": "The AAGUID of the authenticator. An AAGUID is defined as an array containing the globally unique\nidentifier of the authenticator model being sought.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cloneWarning": {
                    "description": "CloneWarning - This is a signal that the authenticator may be cloned, i.e. at least two copies of the\ncredential private key may exist and are being used in parallel. Relying Parties should incorporate\nthis information into their risk scoring. Whether the Relying Party updates the stored signature\ncounter value in this case, or not, or fails the authentication ceremony or not, is Relying Party-specific.",
                    "type": "boolean"
                },
                "signCount": {
                    "description": "SignCount -Upon a new login operation, the Relying Party compares the stored signature counter value\nwith the new signCount value returned in the assertion’s authenticator data. If this new\nsignCount value is less than or equal to the stored value, a cloned authenticator may\nexist, or the authenticator may be malfunctioning.",
                    "type": "integer"
                }
            }
        },
        "webauthn.Credential": {
            "type": "object",
            "properties": {
                "attestationType": {
                    "description": "The attestation format used (if any) by the authenticator when creating the credential.",
                    "type": "string"
                },
                "authenticator": {
                    "description": "The Authenticator information for a given certificate",
                    "allOf": [
                        {
                            "$ref": "#/definitions/webauthn.Authenticator"
                        }
                    ]
                },
                "id": {
                    "description": "A probabilistically-unique byte sequence identifying a public key credential source and its authentication assertions.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "publicKey": {
                    "description": "The public key portion of a Relying Party-specific credential key pair, generated by an authenticator and returned to\na Relying Party at registration time (see also public key credential). The private key portion of the credential key\npair is known as the credential private key. Note that in the case of self attestation, the credential key pair is also\nused as the attestation key pair, see self attestation for details.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
